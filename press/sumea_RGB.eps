%!PS-Adobe-2.0 EPSF-1.2
%%Title: sumea_gamesRGB.fh8
%%Creator: FreeHand 8.0
%%CreationDate: Thu Mar 06 15:19:22 2003 
%%BoundingBox: 0 0 568 125
%%FHPathName:C:\sumea\corp\sumea_logo\sumea_gamesRGB.fh8
%ALDOriginalFile:C:\sumea\corp\sumea_logo\sumea_gamesRGB.fh8
%ALDBoundingBox: -11 -516 584 326
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%CMYKProcessColor: 0 0 0 0 (255r 255g 255b)
%%+ 0.0476 0.0416 0.0537 0 (237r 237g 237b)
%%+ 0.1521 0.1353 0.1595 0 (189r 185g 181b)
%%+ 0.0326 0.1312 0.0345 0 (255r 208g 241b)
%%+ 0.0499 0.2676 0.0299 0 (250r 163g 231b)
%%+ 0.0606 0.5181 0.0103 0 (246r 89g 211b)
%%+ 0.0714 0.7431 0.0048 0 (244r 16g 193b)
%%+ 0.0876 0.7825 0.0108 0 (226r 9g 176b)
%%+ 0.1285 0.8197 0.0124 0 (202r 10g 158b)
%%+ 0.5577 0.8488 0.6547 0.2778 (87r 27g 55b)
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t==!^::f!!!"F!!!3-(<,$2\ErZ1?!#Ybl!*fM/3$2k4
%:!!!te!$VD4!,2FL!+c.O0`Z4oG#JBG!$D8.!-/'X!-A3S>lYuI8,u<`$32XX0`Ws/1]T30+F=0(3rsC0U&Z_EG;05<0`c5J")g7(/-&F(!AK$(2Zc#?!rr[PBl6afBl8$(Ee$FU!!iQH1,(OF/dF'Q1,(UF]`8$4!!!0&&PQVSF@:%W<bZ,h+=KTgGQRpH!!=o-2,+)_]`D&A@42+lAHDi4"98N($Y3gi@rc:&F98CTDf,OT)QiQm
%:*WQ1b2[BC@$qLC!!t>;3!#kmss5O24!]C-M"a^@0!+%>\!!#PQ!<<*m!BC>a!+Z'00a@d_!<3N6!!*2b0`d==!WZU6!#Yg!$io/c!W\$U3s\Ph@p]aEARb]t#R3F(Da+tR!'gNm3t_Yr%o[%]FD5W*7VQ[M(og>>D/'I`!"&]>1BLuJ'kK*%G;0)3^]?A38H:^M2#o<10E<^*Duai]$31&:!"Q5>Lg^;a,Y^Ql1&q:S!"9Z6ONH?!
%:ATDWrDE7c6@<6"#G9A,NBepSc2)$^:E,[lJ!WWH_!(7&W!!#1n#;\@r1,1[@!!!-%$pt"KF`VYCD,XqbAS"(>!!!3'$il*g:'PM7E',0o!&c_?0JWl+!!<3-2$AG]WWE>($34'+DEJA=!,;LV3"'hq$9fSC!&tNF*EZobE^k1h3"Q*H#=3q;0I6c#"`Rmh>p2-//.NRm$^W.F!#u%?#Rpe7!<<'#!9+js4UhiqATpXeBf%"JE9@49
%:*`-9X?5<R3*?P8*!$D=C1*Jja9Ht5O0E;U`$NLk@!!ZX-!'LH),R2&7!<E0?/-[:<2uipu1]gTFNAU\>:cnhOj2a(X6N@)h2#p;O!!4-[!)s^S3rjYL",'ST!Z[$s+[6G;0`V:U,/b$(!!$48B4Z,b!"Ao;!"Ao.,QK%h!!F5@)?:WT(]Y?P('#(0#nm:B!"o8D!"_9o$onY%!!rW2!!`L(;?f6?"?.+u;$I@E!!!3Z"&:O4D##i]
%:EWB]#+>#t]<&5J<3[Oq/"#g?L==@YZCB+>:!!'/N(`3u&&eY1?'E^,k/H>c2&IJLfUJNfK!'LPj!'s^;5VE*t#Qld^$31,;7+;f46N@T8!rrfV4U_Dm+u^)W2])Su!@/fg-NF,]ir]8rl2q#$ncAdm'j7d:!<<lo('+CN$NL/k#8T6:!<<lT!!*'l)4CO*(*ik\J,fQb.f]PO4TI;E+ohW*Ai0QN!!(6f2#p#E!)+@J7;PY%6tPUN
%:$31i@FT>YK!#@UN!<<m(%fcSFFJKV!!JCOT(5r:p!Z$mu-p%R%!WW9;5S:7$!!3qH!%S$N(;W15!#F(,"&^>u!rs*X%2S:3!!3r+!!!':.53mg!!!!1<+U;r6tKt=F_l.cFED8&EaBgn!!bY('0S0pD*Llb>rk\X1]daZ!0[\%@;KOtDf/Z/!%J*O"5Q*O"98FP!WWFGFE2;8:B:Ls"D2@aCqQJD!!>G0_]VAd58!rT5<]'2bNCb%
%:7Pk*$!!!'-#QOo+!^/dK0OZ[90E<ab)B8_sr\u\6m2@Po!$rKg/JnI6(]Z-(@KI?;2((=W6PraDH+:n'AcY%64XE#f3rh;t/7UO;!7s4B3@#"5U:<Wg7UIu`!,"AHD`LX30iKA!#W5\%Ch*ZK9OW3XEg:#;!"L_!1HcOp1J'>`(KJ@33<UIE!FdiA5m-L5#ljtmm/R,P!&4JQA4H_V2$l9%#9X":!&[g[7fY7D7fu,l"9Z?JN&,kI
%:\[AhX"22AJ!4fW?!'L<P"'XM93?C%Z"(qUH>6d#A!Cm5\"93!90iA!;!3L)m!!=r)=#>P;C&g=%7g&cM!X&N(0`h>8!;f4c!(R#T!&4ID!D!4k3<0%5M#^4K<rb$:VH>mp<rbQQ"'5In!($\r!!#A'!<>\S.LY>ghK1&:"=ZhH9`QV4"s,OP+ok1c9.<@_R6*Y_7gsS,bWPt_%Ojn,9Jo:t7SYlG.n0`<7Sbs^">Km>CC1CK)hd[-
%:0E=p0*<7lZ8cV*V5<i[U3I:`E!!!Q1=WIJB"#0fX#m`FGSHqf#6icLP!)*DP<<,M8T)\p3#WTLD!!!9k/[bpC_OCg!C@MQk(^pNI#X<rZ!&F^C1\h;?aE.\O49,N(#X7Gf#Xg0o#X5388-*@$5QKM?!G&e+#X4t0#\o2o#X7uJ,3DDsCsn+F7_m4R70#YkU/_1c+9En28-*CR?O0:LaTuW"RT0?"0EL5Y70#jZ9N(Zl97jAR8J&\A
%::+^]j!#P].G^2^X8-)0pIL&\P5R9jmNrTFk9YU]972TkI:\B'*!COMC!!!:(f)Q(Dqmcu06(nQOI5)!-#ZtnL8-)7Vj9T)emKc4kL]@D\>i.":9B8DF@1ojG!!ro2!)c*i#\I!T#Z=MR#\!3G#QYN8E7,#.E;"ndD9VBO!c,+j>6>E:Ds";q!CPWZ#^9C=#XaO>#QPEW`/k6m'6=G)d6gG*7NH+I!!%C<mg)>E6jS,ur!5ge"EYp:
%:jp2fPII.Y<!C[HHq=P"f$q1.j%5e,V!GFP+%H;k>g^$7Y70%'Y&N'PZ!D*rW]@U1!J0]qNgf4?1%lfm^#Y,\hZnYo'MhJc6L^6cmMqWVI"&0\)!C[obe'_58Mj03W5_C,6:@:1a%1%je4s.Y1#_iqs`'m#q8KiWu\PXN&X9MZ)IX>o5!$X*SC+:9R@3RS!;^+(N<73W?!*)oS&$e&.1aE;+!9Wb%#[]PH#OOZ"#[\F1#8dI!Y`Dea
%:U5VM@0bjrJ;GRR?R)90bC]FSQ#]8ph#MD(q#^\u38-.3V!!'qCLCs"\f22&EJmkYadL?<Zd0PU9,=hjX<4`Eoj.ck*AKVPi#X'+3`5MZ]MtI'@!Ps6V#_2n9)$e!l2[G/tIL!\A]Ej"T5U8d#!Np#?88Hl`_)23d+CtO@[QjiI8--c4SHqNbf*B6+<<tm`!'g\mb/<cU6,(6-!R<-"#Y>@)!<i_R$+gI)!XI"B!!l;)0N\>U]3("%
%:M"^`P<AinDc8>T"SXEIX=3`RO!([.=S14eKF(#="V"Y.!;ni<_#M%lS#[<U&8-.FE56t'HWrN,)fGiNM<V*O%glA6;8_9\e!*0^FBa?tf,7!(>,R?Z@`<R69mCTJh!(-kZXTDE'n8k'l!XJA[0bA%)3s/"SqIURI#59/b5m@Sm>t`4Y5mKp]rX2/%#t4hQ#mWm!2[WXff],s@rZQs*6;7jnrqM1A%6+@o"]_<j&-r=\MEXg'@_SJd
%:&-rQ2lpD@U!=Mi[5njSn!(8gQ[bFd^3>>QrK2+oQ#Rf+6:DO3D6t-]7:DZP&!j.2O)@-U36U_murLAn`!(@hd!=/I%7L4c8A-`$?3XCTC+?5_npDjtSJrq$D!V5SH#]p%IGp!@b"q(]`,ub-=dXh`Y7t;^Q!Ro[$#GX6Y#MLm4UDNt9c!$'N4TJRd!%9h*="$$[=P,SC!*ND`3J@G4TE##n"#lMG#mXjuSd:5)_$=OJ!+LNc#qe^4
%:MWU$+?06],!'q?&ni]\d#Ddn!!/R1L<<.KZY_W<[e.Dpgd[L4B#[9,+#?h`'#Z,P68-*/Ao)O:H7+Q_j>`+A<.:sER#XH&:J,i+@GUSd^4fcF)D^/Ek4cCE^L^/J_cj2eX@n6W\V:SWJM<"=1#RE[`%0r)`i<W#A0h;>2r>5M7#Zkq=#F>k_#Z>Od#F=c2&i^/%5raf0#=nlJbG^*pK`FIBO:e,c!!nIk+:"1*+:*l02$]%)LZB`V
%:1C*sdMK5+U!JsgG#_Ke1#DmRgJ:LonM)G,8IVYHU!=";b>n3A0!!.o>)$j_87L+bs.0rtJY"/Qn!-hTP#YS)Y#D;]2#YQtB#6=g@\q(,[Eo'=fB8PgX>d(R@M#]sE<4?16!+^@O.qa/D#^p$i#Dgku!-j6U<<.\5?31*Q.B$Gs.4nfT.1cJF+C.tr%0-D.rrN0&!'F]s#6$B/!!!:L4n&[TEQ/96.;&k`o0!?Z#]Wag9GRd!A]$bt
%:Ka;BRIg5tHXoK"=D&O`+$/aJCAB.Jj#8J;-!!!:5Yh]NqlLP9jm4nna;?R7*#[hb16N\R]fa(j^b6K1/l@;2oN<^efap;2SWCR%=6FI.[O9Yad.=q@%=A6=3.0FVs;.2j`!<<*G%ke2_/\;69K^&h=VIp,8!$RbO#YML!M$G"LQ3]e&GR"3L(t3m=8,XY;*kYP[4U[08!rr<QG!?7!%_N#o#uLslR/mNn!&NXe#XsDk8-(^"VR_i/
%:K*YIWM$F"]3>9F=9l0k830c]6>s8ik!>#5d-r<>@#<!Qd#[pU'#;.hA&-)uL4\_^W+9"2)D(`^2-S<:;#RG4C;[4)K\-R"$j[0+Z`(^43#^D=5#7^:A#]TrW#7[O*TE%2'`^g+Di[5"^e9)!-Chj<*!$GLh#8^J$#_Phn8-'Pb;$`$Z!,)ZD)SOB$L;M[M'b<\<NZ\>jpIG;gS:V$%mp?;.BN>Cu!$I<+#6D#m#_]Df2us6N&'Z8G
%:&-)q8!6C6%#4K[##L$&'#3ru(#;d17?ipBZ/>uo+/0P)q!rrE^jo@3U@%/\M&Ie_K!+u93$ig;-rrN0&!"C[s!!!;6AN^;tR]$M&+;tMa42_,T#dek##ZNk\8-,FG$<R>+(m4k)#ZOoN#bVHO#ZF3U8-,)t(]XOA6g6]=RpHO08"JrOQ)Rjs!!ki"7n<oF^s<9O_NkIiQ#_D*>/cC^0F0u@J3sEs`iTM=-Fa$U#`:-Q#XuYC4EHfb
%:#`W>:#YpBJJ,i+@R6J%bCp5r+QUI&DB7HQSKF"&,f*HBSdmsM6_KlJRZ_=)n!]UI:/@>bZ*cVI?d]EL5^8q;7[.FW])"\*3<9FOE87r460E;gg9`RN_[Frq5KN\B^ZsG`u!"k!:V[0a=Q3`&i@RpO7lgIs\&B)9Pc9VX?_<)=q#=nm?K:$!PbLHRqZj9E^LBu3iG6gX5)FsnPM*s(B<=R4`'ho)Ba0aDl%7gN8fe6P@&E:U#%WIP,
%:mR%Nk^$IgJ&Mt=Q(^(*E@osQU#_2mTs8N-#!rrTp"K++H#\W"L6pM#H!,7gO<<-WQ(J"S*67<+L49,@P#cB#i#\7XV#cV*d#\"<p"@J^cXHcZh@F0K0WrQg5!3N#(![^>96NaR6g'D0d!XQ!Qb!5t5!>r)\)$jb$O%9;Voj1c*70$oI;Fgcn70%%\:GiE^.^01pJAql"5l_/t#]"_H#d4^9#]5Pl8-l;N!(MPGDCa0AXl6!SIgrYR
%:!37mW70$'cVuQh%i!=-bK*\GoWsEQ[#7.4-0_3p'CD<TF$31,^!!*'#!+Z(O"_%rA:D#--!bPD5$31)+rr?Un!sLCZTHF78!B1Zu!*TA'!)a(&!<<-#!J$F:!'gNJ!,2Fe!!!<*8HWW+!!bD7&O8)O1ck8L!$F0S3ACXZ!&=O/!'h)M>mLN4C\II)=jti."SVNh!"+uo=TAFb!!b981,(O=!(R,G56E]e"$dDR=T\a+D>O+(akPWS
%:UZ^fQ"8_io!"Do&UAt9W!/CY6<s(3;3&l*a1j9%?rr`E'd*V=QB*826!!(Bm!!#.^"L'!K!,qr=5lgt'!!!r><rd%:!4%(:J9LuR%T`XL!&FWU!'L;`!-%uB!!N?+U6./?!*p$f!&$&7E^'p3!(RV*!-;9T"@+%/!<<'#!!*'(8fQ'>,m]^H,62lmK`KWR6qmYP!SQ_d#`*$4#`-Ae!03u@<<.UoW(6q^!dtOt#YP4f!5XD<q-7YC
%:!&su`s'3)?0EHk-#5K.*9`R]boIp.I$r-p070#4K<<+o\8-)'[1^I:e70%`9!,ifV?na;EE^(Kt3tu=-!&Z\F:F$#BFiqi40a\8ZSnf%_aoDDK3?pZe"oo#c!`f@]Eu6i5(c=Gf@fppUq\pD3CL[HI7aV#m()[)P4TK='1bg4l"u]H`0`X365X7,T,'ihQ&.l[oB*7eu!!!QA/!'`24TGTb!."YG>no9uETgI(GQ7`b5XWgu:8TBA
%:!-S>C!!*'!!!%<FFoae09`VR4!W[R+)_2j/HohZ8>8mqMI9RX6!!*%$"TJN'!B!5#:r"D/#a6N6#_`8p(^'hE#a7#%584C@!Zq]33Bd_c,6/-c<<1k/=[`<]!V;jE#\,fO#`-Ae!.DHd<<,Rs$V1:c"#Dgg#YP4f!8rN'"#U'<!=&t;0aK`=#7IHm70!P\0`Kc"70#:J#20k/:'=Ps2?["[2?c&@;Zi4Jn2WX9!]9s^"#U'DF_]`2
%:>Z(qo$&&A%!([.)4Eq,BOI'S(#_`8$!%7jU-ij]:=9&=b(]XR9s2tWI!&jne0in?k:)?t3H2qa^0E;):)$0e8#(J6B"b<0]"os3\(`!)Os8N-#Cbu@s*!rr`#bo"Y#3S<270&;I2\6840Ylkt5QQQ=#j,7g9`R-R#m*MO#\5,6@),bBL=,Kj!($(83!!4b-3OQX!rp/,!(-lH!&t!^"ZQL9!)Wta!&su`b>t`?"B>Hq"#^9^Z+GmN
%:!&b!?<!4oU!<<-#JcL6"FBV]W!!!QHKE-l0!%\*Ms8N(O!!!?d&iMTI!,7)e<t>`?!s&D#ofE5+'EG*)!)!Cs!!!$09OW3XE^aMQF@0t_DfPgX@''Gk"D%Xj!/CQ2!WWF/!erO:8H],X8JOuj!-Ku$A2I\8$36"g!<<'#!(R1:$'!::&-)_!#*/fc"TSQ&rrA&ZM`=$\6N@+4>RCN49`tt,mfS^S!!E9t"-EQ`3<V&]$33J$g4:9Y
%:69CKC!,FDYEWC#@$Z7qB#6808D$<E??uVD5!'LhlrrA;aPVWn?#_<o!!1*[(Y`f'K<u;/B"#U9Q1ehO=&Mdeq!s"a/g&Nl0!!$R6#67Bs!,2E5!0@9_9b^AZ"(@j?2J$M[!s8Oms8RTM!+u?;9?g`I:CI6'Y#bW(3<]UMq.2U!Cc`&L4TM#Rrr<$d!s3o\!'Lhm!(d/h"#C>d!!E9,!)5<^70[Wa-:`Mn!!!*$T1]2>!)!@ofn;mC
%:2[#<O0`_=U2#pDT6RaqoGrYtE567GX1BmgY@gP2L%fcT&!s/Jl!Asm>!BVimJYiFA!2'=`!1X%X#QSsT#6t6)!WW3%3sc#F*&A90!<<)L<WN3\K7s;Z!!3.#<<-)3K`Hf,!!!$LW`T:U!8mU+!!*)"2us$[K`Hf,;Zfo63s(*9<<*%"<E3]4raCK\K`Ek<0*qkK-NjF:%0Za1%2]'Fs8T+"9agnaK`Hf,!<A/qK`Hf,!&k1`0`R`D
%:X$R.d!egVC!#Yb:+pnl&8H8_T2[DtYK`FOA7^<'qC8sT-!!"6<i:gd_Z!Co@!!):D!<E0h!)!CYWrN+0=[,X_!,=In9e3JSC'c-ZAH4k$8Hif49*0qTb==N="p"]'!WW9V!Cmh.=ss@M.P_?,(khtG^L[BH!$DCEK`Hf,!(-j%&h5^O8/#P73!BKd/-Z,d^B+B87KWVj/-\*@#6:7u$+1t1&;:+<!!!"4!.Y$!3"/:jK`F^[XOWoh
%:=tB^T3\1=4K`D)Q=9(,YK`Hf,!!%NJ!^Rh,!/1E,!!!!T!`g4n!/1CQ!&sr[!/1E,!!*&i<s_4r7gaqM70!;f5QLlcK`Hf,G<Z-/s8N-#!rr0Q!DFPM.Y\"Y!/1CQ!,)A0&<-Yj!.kN2!/1CQ!<:\=!^[3I!/1CQ!([(j!/1E,!&dOV0`V:UWW9!u3<5uXVZ<RoV#[:o!(J.u!!!!XX66`oCJ%\p!!!!f!C6]O!&Sfu5la1Nj5j_3
%:!!!E-!<9f$!C6]O!'pTN!(?uU!&"?[@g*,<!)3M\!&,Mq!),]Wk=Ye@!+>q!!'pTN!!#i)7g2Nc5l^lb5m0s`7g"YL5l^lb8,rVs3t?(N!!'D,ZiIE4!!TY.YlM!.Y5k^*XT5FW$k+r-8>%_:bod"!gbAdf4TJqT1q2K(#mh_hYcq=m!92u<!!tG74TG[N%T5E,B<$J?KQB+dE]@WP3<3tSE!$*N&M"G70u4FI1BU>W"onT&,;MK'
%:!,i,J!#,DB!#,J75np.Q$7Z%e!(J_m6i_0j")Kfj\,\2`FoX82$37[<.KHmWWrSmpQo]RaN'0&>3<1B3!&Tr@!'pk&!$s]3!<<r:&8)"CrW`E0'1Rrf@GV=k!b=*43<B<`!EgQ],taF)kPtT7!!!W3!+d2O!C6nj!'gNH)S:ZQ7Kri>!R(NEs8N'17VQ[M@:F%a!$`]g!!<3%9`PGeBk)5b;c<Ys5X5<+0EFmA$@li3F8u>_/a(9T
%:?82H\4)t?r;fm%oD?^5V!-8,@!FnA7#>Is%D.N_J.f_QE!EO1C1'BuKT)]$l"98Fp!!,P[6ib/D@n:0>A7]d;"TUf/@q,gWCi%&p"(hXV6UPoa$)'6`E)0qXAN:%s!2Um%!23Mi2?5uB;faf#AcPIX;fHY`V,RRU3!EnO!<>&&TgW=2@/ruX$Ea@o+JD+46tLFLEbTK74f:P1ChP,F!!!#&!22htASl!rF9"QU9QP]>ErmR@gb7cK
%:ejCfS!E'=]&Oe*EX8kM,8#W]nYe0rt#])L-3WoE_3%@:6D/aE7Blmo_&-QE`BE8+@!4#+8Dfp"!9`qm*!K=3OBkMR/AMXYn!4r6@<!$tB!!*W4F"Tf^AcMhD!4tO;Ec6/-!G2ltF$i:p!5ef19PJB7"Zum!!!,%i!(=a*TgER6@qu&M5\=VE9d7OV!J$k?Ec5H!A5!1-!6,#X6=FqL="n,=&8Zb&a)D&H"^_@DAhb/'!7:ecC2jZB
%:<!#KsE+O'$A8;63AmGnp!7A.S=>L5>&OHrW!!>+`E(i;:.O?A@!7h/#6PI6`OoYO_f)X?"FEq\6JH8#)!n[LV!^oP$Bk1dr2?\)B4YLDW@l+qR!#Q_,<_Yk%!<CmTTi>H00E=$]1FI5u%h&O&!!-)r-q4O,!%U?*6q2)X)^XF$!@'d!0eQ1CCijAS)/jOh<\-!WAnI=\5pZNE3(N-d!!bdi5l`V>X>']@!<iJdT+NtN#QREs%Weuc
%:9`RHZ5la1Nec=>\0aId12G$=PfiJ1(!1uCUgbAf+!6-epkV3(j2ZuNc"Yfu_!68"<k5a*u!^d"?>67:tk<<+h^d.rd!9X?Z0KIQ?"%<?2"4dIa!8IR#]%JqCK`Hf,K`J_f!<k7ZZSr.c#\aF<2$BcPY?_8s"<ddJR/ok][5e>c1CD\m/a#+s9asYo8HF%<Yr;es!'q*l3rhPH5la1NVE#'t1b(ck5leQJ!'L>"!5efS!5efS3S*2^
%:!5efS!5f9h!5efS1BCni9`i65TE5&mh65$S
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
FFJ
curtextmtx makefont setfont
exch
5 1 roll
ts
pop
} {
pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1728 1570.11 2323.28 2412 } def			
/bleed 0 def			
/clpr {1728 1570.11 2323.28 2412 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1739 -2086 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1801.7008 2210.7401 m
2243.9055 2210.7401 L
2278.3476 2210.7401 2306.2677 2182.8201 2306.2677 2148.3779 C
2306.2677 2113.9358 2278.3476 2086.0157 2243.9055 2086.0157 C
1801.7008 2086.0157 L
1767.2586 2086.0157 1739.3386 2113.9358 1739.3386 2148.3779 C
1739.3386 2182.8201 1767.2586 2210.7401 1801.7008 2210.7401 C
h
[0.0714 0.7431 0.0048 0] vc
0.0714 0.7431 0.0048 0 0.0714 0.7431 0.0048 0 /normtaper load
 1777.13 2067.92 2268.47 2334.63  34 2022.8 2148.38 lfp4
0.0714 0.7431 0.0048 0 0.0606 0.5181 0.0103 0 /normtaper load
 1777.13 1962.12 2268.47 2068.42  34 2022.8 2148.38 lfp4
false setoverprint
n
2240.1491 2195.1419 m
2241.0952 2195.1961 2242.0485 2195.2236 2243.0083 2195.2236 C
2269.8529 2195.2236 2291.6142 2173.7306 2291.6142 2147.217 C
2291.6142 2120.7033 2269.8529 2099.2104 2243.0083 2099.2104 C
2242.0485 2099.2104 1803.6559 2099.2104 1802.6961 2099.2104 C
1775.8514 2099.2104 1754.0902 2120.7033 1754.0902 2147.217 C
1754.0902 2173.7306 1775.8514 2195.2236 1802.6961 2195.2236 C
1803.6559 2195.2236 2240.1491 2195.2236 2240.1491 2195.2236 C
2240.1491 2195.1419 L
h
[0.0714 0.7431 0.0048 0] vc
0.0714 0.7431 0.0048 0 0.0714 0.7431 0.0048 0 /normtaper load
 1754.09 2152.25 2291.61 2195.47  0 2022.85 2147.22 lfp4
0.0714 0.7431 0.0048 0 0.5577 0.8488 0.6547 0.2778 /normtaper load
 1754.09 2119.66 2291.61 2152.75  0 2022.85 2147.22 lfp4
[0.5577 0.8488 0.6547 0.2778] vc
0.5577 0.8488 0.6547 0.2778 0.1285 0.8197 0.0124 0 /normtaper load
 1754.09 2098.96 2291.61 2120.16  0 2022.85 2147.22 lfp4
false setoverprint
n
2254.5748 2195.7323 m
2260.837 2195.7323 2265.9134 2190.6559 2265.9134 2184.3937 C
2265.9134 2178.1315 2260.837 2173.0551 2254.5748 2173.0551 C
1791.3622 2173.0551 L
1785.1 2173.0551 1780.0236 2178.1315 1780.0236 2184.3937 C
1780.0236 2190.6559 1785.1 2195.7323 1791.3622 2195.7323 C
2254.5748 2195.7323 L
h
[0.0326 0.1312 0.0345 0] vc
0.0326 0.1312 0.0345 0 0.0499 0.2676 0.0299 0 /normtaper load
 2011.63 2375.83 2034.31 2427.59  -270 2022.97 2184.39 lfp4
[0.0499 0.2676 0.0299 0] vc
0.0499 0.2676 0.0299 0 0.0606 0.5181 0.0103 0 /normtaper load
 2011.63 2088.31 2034.31 2376.33  -270 2022.97 2184.39 lfp4
[0.0606 0.5181 0.0103 0] vc
0.0606 0.5181 0.0103 0 0.0606 0.5181 0.0103 0 /normtaper load
 2011.63 1941.2 2034.31 2088.81  -270 2022.97 2184.39 lfp4
false setoverprint
n
true eomode
2215.2081 2151.8692 m
2215.2081 2150.4535 2215.1515 2148.4116 2216.2584 2147.2355 C
2217.3654 2146.0593 2219.0016 2145.8144 2220.5833 2145.8144 C
2221.6373 2145.8144 2223.7961 2145.8144 2224.7846 2146.9883 C
2225.7699 2148.1584 2225.9585 2149.8216 2225.9585 2151.8692 C
2225.9585 2153.5506 2225.2541 2155.4761 2224.1667 2156.503 C
2223.0546 2157.5534 2221.8814 2158.1712 2220.5215 2158.1712 C
2219.1992 2158.1712 2217.4323 2157.4298 2216.6909 2156.2559 C
2215.9486 2155.0806 2215.2081 2153.5957 2215.2081 2151.8692 C
h
2231.3955 2131.6041 m
2228.4732 2132.2304 2214.096 2132.3456 2209.8947 2131.6041 C
2208.0332 2131.2757 2203.3674 2119.6169 2200.4418 2115.9111 C
2197.6615 2112.3894 2193.5838 2110.9066 2189.7532 2112.7601 C
2187.2351 2113.9785 2186.1697 2117.7646 2187.7761 2122.1512 C
2189.3885 2126.5544 2199.2679 2151.4985 2201.245 2156.6884 C
2203.222 2161.8782 2209.6337 2177.1746 2210.7597 2179.7337 C
2212.1189 2182.823 2215.3316 2186.2828 2220.7068 2186.0975 C
2226.082 2186.0975 2228.3681 2183.5025 2229.8508 2180.3516 C
2231.0414 2177.8218 2237.9445 2161.8782 2239.9216 2156.6884 C
2241.8987 2151.4985 2251.8348 2126.5294 2253.514 2122.1512 C
2255.244 2117.641 2254.055 2113.9785 2251.537 2112.7601 C
2247.7064 2110.9066 2243.6286 2112.3894 2240.8484 2115.9111 C
2237.9228 2119.6169 2233.1254 2131.2335 2231.3955 2131.6041 C
h
[0 0 0 0] vc
0 0 0 0 0 0 0 0 /normtaper load
 2187.01 2163.75 2254.33 2186.35  0 2220.67 2149.03 lfp4
[0 0 0 0] vc
0 0 0 0 0.1521 0.1353 0.1595 0 /normtaper load
 2187.01 2137.56 2254.33 2164.25  0 2220.67 2149.03 lfp4
[0.1521 0.1353 0.1595 0] vc
0.1521 0.1353 0.1595 0 0.0476 0.0416 0.0537 0 /normtaper load
 2187.01 2111.71 2254.33 2138.06  0 2220.67 2149.03 lfp4
false setoverprint
n
false eomode
1790.1973 2168.2419 m
1789.9501 2161.3222 1792.6277 2157.1021 1796.9317 2153.2285 C
1801.8744 2148.7801 1808.9178 2146.9265 1813.1191 2145.6909 C
1817.3204 2144.4552 1825.1051 2142.9724 1827.8236 2140.9953 C
1830.5421 2139.0182 1833.5077 2136.2997 1833.2606 2132.8398 C
1833.0135 2129.3799 1832.5192 2127.65 1829.0593 2125.1786 C
1825.5994 2122.7073 1816.8261 2119.9888 1820.1624 2113.8104 C
1822.7357 2109.0451 1831.0364 2110.5977 1837.4619 2114.0576 C
1843.8874 2117.5175 1849.0773 2125.4258 1848.8301 2133.3341 C
1848.583 2141.2424 1846.1116 2145.3201 1842.1575 2148.7801 C
1838.2033 2152.24 1831.1788 2155.6497 1823.993 2157.1827 C
1814.7255 2159.1597 1805.9522 2161.0132 1805.7668 2168.5509 C
1805.6483 2173.3702 1808.4235 2174.3586 1811.8834 2176.8299 C
1815.3433 2179.3013 1818.7414 2182.7612 1816.2083 2186.4064 C
1813.0596 2190.9374 1804.4076 2189.5574 1797.6114 2183.935 C
1793.6859 2180.6876 1790.4444 2175.1617 1790.1973 2168.2419 C
h
[0 0 0 0] vc
0 0 0 0 0 0 0 0 /normtaper load
 1790.18 2165.52 1848.84 2189.36  0 1819.51 2149.96 lfp4
[0 0 0 0] vc
0 0 0 0 0.1521 0.1353 0.1595 0 /normtaper load
 1790.18 2137.86 1848.84 2166.02  0 1819.51 2149.96 lfp4
[0.1521 0.1353 0.1595 0] vc
0.1521 0.1353 0.1595 0 0.0476 0.0416 0.0537 0 /normtaper load
 1790.18 2110.56 1848.84 2138.36  0 1819.51 2149.96 lfp4
false setoverprint
n
1888.5571 2186.8389 m
1885.9004 2186.9007 1881.9462 2184.6147 1881.9462 2179.672 C
1881.9462 2174.7292 1881.8227 2139.2036 1881.9462 2133.8284 C
1882.0699 2128.4464 1884.5412 2121.8423 1889.7928 2116.8378 C
1894.0958 2112.7373 1903.1381 2109.5473 1912.1585 2109.6709 C
1921.179 2109.7945 1929.8905 2112.2658 1934.6478 2116.8378 C
1939.5933 2121.5906 1943.0504 2130.4303 1942.9886 2135.4348 C
1942.9291 2140.2551 1942.9886 2179.7955 1942.9886 2179.7955 C
1942.9886 2179.7955 1941.6294 2187.0242 1936.0688 2186.7153 C
1931.2508 2186.4476 1929.458 2183.0701 1929.3344 2178.7452 C
1929.2108 2174.4203 1928.9066 2147.2393 1929.0255 2141.0571 C
1929.1491 2134.6316 1923.9592 2123.2016 1912.3439 2123.3251 C
1900.7285 2123.4487 1895.5387 2132.7163 1895.5387 2140.6864 C
1895.5387 2148.4731 1895.4769 2168.5255 1895.4769 2173.37 C
1895.4769 2180.228 1893.3145 2186.9007 1888.5571 2186.8389 C
h
[0 0 0 0] vc
0 0 0 0 0 0 0 0 /normtaper load
 1881.89 2163.58 1942.99 2187.09  0 1912.44 2148.25 lfp4
[0 0 0 0] vc
0 0 0 0 0.1521 0.1353 0.1595 0 /normtaper load
 1881.89 2136.32 1942.99 2164.08  0 1912.44 2148.25 lfp4
[0.1521 0.1353 0.1595 0] vc
0.1521 0.1353 0.1595 0 0.0476 0.0416 0.0537 0 /normtaper load
 1881.89 2109.42 1942.99 2136.82  0 1912.44 2148.25 lfp4
false setoverprint
n
2022.9369 2143.2195 m
2016.6349 2143.0959 2013.4222 2157.9241 2011.3215 2164.5967 C
2009.2209 2171.2693 2007.3162 2178.3815 2004.0928 2183.0701 C
2002.054 2186.0357 1999.3972 2187.8274 1994.331 2187.8892 C
1988.7695 2187.957 1985.743 2182.8847 1985.4959 2179.672 C
1985.1826 2175.5987 1985.6812 2124.1283 1985.6812 2120.4213 C
1985.6812 2116.7143 1988.3997 2113.6251 1991.6743 2113.6869 C
1994.7654 2113.7452 1998.038 2116.7143 1998.1616 2121.0391 C
1998.2852 2125.364 1998.9648 2130.6156 1998.9648 2133.2105 C
1998.9648 2135.8055 1999.6444 2139.3271 2002.61 2139.4507 C
2005.891 2139.5874 2008.1088 2133.952 2010.333 2127.8971 C
2012.5572 2121.8423 2014.4107 2112.6983 2022.0719 2112.5748 C
2029.7331 2112.6983 2032.4516 2121.8423 2034.6758 2127.8971 C
2036.9 2133.952 2039.1178 2139.5874 2042.3988 2139.4507 C
2045.3644 2139.3271 2046.044 2135.8055 2046.044 2133.2105 C
2046.044 2130.6156 2046.7237 2125.364 2046.8472 2121.0391 C
2046.9708 2116.7143 2050.2434 2113.7452 2053.3345 2113.6869 C
2056.6091 2113.6251 2059.3275 2116.7143 2059.3275 2120.4213 C
2059.3275 2124.1283 2059.8262 2175.5987 2059.5129 2179.672 C
2059.2658 2182.8847 2056.2393 2187.957 2050.6778 2187.8892 C
2045.6115 2187.8274 2044.3759 2186.2211 2042.337 2183.2554 C
2039.1136 2178.5668 2037.0236 2171.1458 2034.9229 2164.4731 C
2032.8223 2157.8005 2029.2388 2143.0959 2022.9369 2143.2195 C
h
[0 0 0 0] vc
0 0 0 0 0 0 0 0 /normtaper load
 1985.39 2165.18 2059.62 2188.14  0 2022.5 2150.23 lfp4
[0 0 0 0] vc
0 0 0 0 0.1521 0.1353 0.1595 0 /normtaper load
 1985.39 2138.58 2059.62 2165.68  0 2022.5 2150.23 lfp4
[0.1521 0.1353 0.1595 0] vc
0.1521 0.1353 0.1595 0 0.0476 0.0416 0.0537 0 /normtaper load
 1985.39 2112.32 2059.62 2139.08  0 2022.5 2150.23 lfp4
false setoverprint
n
2102.2055 2121.4098 m
2102.2055 2118.8149 2102.7602 2116.4177 2104.7388 2114.1786 C
2107.0939 2111.5134 2110.2374 2110.9066 2113.203 2110.783 C
2116.1686 2110.6595 2148.7301 2110.6334 2151.3236 2110.783 C
2154.5364 2110.9684 2156.8224 2114.4283 2156.8224 2118.7531 C
2156.8224 2122.1515 2154.1039 2123.1398 2152.4975 2123.1398 C
2150.8911 2123.1398 2126.1776 2123.5105 2124.3241 2123.5105 C
2122.4706 2123.5105 2119.0725 2124.7462 2118.084 2126.3525 C
2117.0954 2127.9589 2115.9833 2129.2564 2115.7362 2132.8398 C
2115.489 2136.4233 2116.7247 2140.8717 2120.3082 2142.9724 C
2123.8916 2145.073 2130.3171 2145.938 2130.2554 2150.3246 C
2130.4407 2156.4413 2123.8916 2155.6998 2120.3082 2157.8005 C
2116.7247 2159.9011 2115.5466 2163.7678 2115.8597 2167.3461 C
2116.076 2169.8174 2116.9034 2171.2187 2118.1149 2172.2888 C
2119.9684 2173.9261 2122.4706 2174.9764 2124.3241 2174.9764 C
2126.1776 2174.9764 2150.8911 2175.3471 2152.4975 2175.3471 C
2154.1039 2175.3471 2156.8224 2176.3354 2156.8224 2179.7337 C
2156.8224 2184.0586 2154.5364 2187.5185 2151.3236 2187.7039 C
2148.7301 2187.8535 2116.1686 2187.8274 2113.203 2187.7039 C
2110.2374 2187.5803 2107.0939 2186.9735 2104.7388 2184.3083 C
2102.7602 2182.0691 2102.2055 2179.672 2102.2055 2177.077 C
2102.2055 2174.4821 2102.2055 2124.0047 2102.2055 2121.4098 C
h
[0 0 0 0] vc
0 0 0 0 0 0 0 0 /normtaper load
 2102.21 2164.56 2156.82 2188.06  0 2129.51 2149.24 lfp4
[0 0 0 0] vc
0 0 0 0 0.1521 0.1353 0.1595 0 /normtaper load
 2102.21 2137.32 2156.82 2165.06  0 2129.51 2149.24 lfp4
[0.1521 0.1353 0.1595 0] vc
0.1521 0.1353 0.1595 0 0.0476 0.0416 0.0537 0 /normtaper load
 2102.21 2110.43 2156.82 2137.82  0 2129.51 2149.24 lfp4
false setoverprint
n
vmr
vmr
end
%%Trailer
